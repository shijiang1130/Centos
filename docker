
基本概念：

container
container 一旦创建如果没有用 rm 命令移除

image
image 可以通过 container 创建（相当于把此时 container 的状态保存成快照），也可以通过 Dockerfile （一个文本文件，里面使用 docker 规定的一些写法）来创建。其中通过 Dockerfile 创建的方法能让环境配置和代码一起被版本库一起管理。

registry
docker hub，国内可以使用 DaoCloud

通用：
查看 docker 版本	docker version
查看 docker 信息	docker info

container 相关：
创建 container	docker create imageid
创建并运行 docker run imageid /bin/bash
创建并运行 container 后进入其 bash 控制台	docker run -t -i ubuntu /bin/bash
创建并运行 container 并让其在后台运行，并端口映射	docker run -p [port in container]:[port in physical system] -d [image] [command]	docker run -p 5000:5000 -d training/webapp python app.py
查看正在运行的所有 container 信息	docker ps	docker ps
查看最后创建的 container	docker ps -l	docker ps -l
查看所有 container ，包括正在运行和已经关闭的	docker ps -a	docker ps -a
输出指定 container 的 stdout 信息（用来看 log ，效果和 tail -f 类似，会实时输出。）	docker logs -f [container]	docker logs -f nostalgic_morse
获取 container 指定端口映射关系	docker port [container] [port]	docker port nostalgic_morse 5000
查看 container 进程列表	docker top [container]	docker top nostalgic_morse
查看 container 详细信息	docker inspect [container]	docker inspect nostalgic_morse
停止 continer	docker stop [container]	docker stop nostalgic_morse
强制停止 container	docker kill [container]	docker kill nostalgic_morse
启动一个已经停止的 container	docker start [container]	docker start nostalgic_morse
重启 container (若 container 处于关闭状态，则直接启动)	docker restart [container]	docker restart nostalgic_morse
删除 container	docker rm [container]	docker rm nostalgic_morse
命令中需要指定 container 时，既可使用其名称，也可使用其 id 。

image 相关：
从 container 创建 image	docker commit nostalgic_morse ouruser/sinatra:v2
从 Dockerfile 创建 image	docker build ouruser/sinatra:v3 .
查看本地所有 docker images
在 registry 中搜索镜像	docker search ubuntu
从 registry 中获取镜像 （若无指定 tag 名称，则默认使用 latest 这个 tag）	docker pull [imageName]	docker pull ubuntu:14.04, docker pull training/webapp
给 image 打 tag	docker tag [imageId] [imageName]	docker tag 5db5f8471261 ouruser/sinatra:devel
把本地 image 上传到 registry 中 (此时会把所有 tag 都上传上去)	docker push [imageName]
删除本地 image docker rmi id
